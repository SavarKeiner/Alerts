<UserControl x:Class="Alerts.UI.CellCoinHeader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:theme="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
             mc:Ignorable="d" 
             >

    <UserControl.Resources>
        <Image x:Key="launch" Source="{svgc:SvgImage Source=/UI/icons/ButtonIcons/ic_launch_white_24px.svg}"></Image>
        <Image x:Key="add" Source="{svgc:SvgImage Source=/UI/icons/ButtonIcons/ic_add_white_24px.svg}"></Image>
        <Image x:Key="mute" Source="{svgc:SvgImage Source=/UI/icons/ButtonIcons/ic_volume_off_white_24px.svg}"></Image>
        <Image x:Key="remove" Source="{svgc:SvgImage Source=/UI/icons/ButtonIcons/ic_remove_white_24px.svg}"></Image>
        <Image x:Key="close" Source="{svgc:SvgImage Source=/UI/icons/ButtonIcons/ic_close_white_24px.svg}"></Image>


        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="#2E3D5A"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="Transparent"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center"
                            SelectionBrush="Transparent"
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="Transparent"
                            Foreground="White"
                            Visibility="Hidden"
                            FontWeight="SemiBold"
                            FontSize="14"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#3063ad"

                                BorderThickness="1"
                                BorderBrush="#2E3D5A"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border BorderThickness="0,0,0,2" BorderBrush="White">
        <DockPanel>
            <StackPanel Orientation="Vertical" DockPanel.Dock="Top">
                <DockPanel LastChildFill = "True" Background="#2b5797">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Label x:Name="labelExchange" Content="exchange" FontSize="16" FontFamily="Courier" FontWeight="SemiBold" Foreground="White" VerticalContentAlignment="Center"></Label>
                        <Label x:Name="labelCoin" Content="coin" FontSize="16" FontFamily="Courier" FontWeight="SemiBold" Foreground="White" VerticalContentAlignment="Center" ></Label>
                        <Label x:Name="labelPrice" Content="price" FontSize="16" FontFamily="Courier" FontWeight="SemiBold" Foreground="White" VerticalContentAlignment="Center"></Label>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button x:Name="btnAdd" Content="{StaticResource add}" Padding="3" Margin="5,0,5,0" Background="#2b5797" Height="20" Width="20" Click="btnAdd_Click"></Button>
                        <!--<Button x:Name="btnRemove" Content="{StaticResource remove}" Padding="3" Margin="0,0,5,0" Background="#2b5797" Height="20" Width="20"></Button>
                        <Button x:Name="btnMute" Content="{StaticResource mute}" Padding="3" Margin="0,0,5,0" Background="#2b5797" Height="20" Width="20"></Button>
                        <Button x:Name="btnLaunch" Content="{StaticResource launch}" Padding="3" Margin="0,0,5,0" Height="20" Width="20" Background="#2b5797"></Button> -->
                    </StackPanel>
                </DockPanel>
            </StackPanel>
            <Border BorderThickness="0,1,0,0" BorderBrush="White" x:Name="AddIndicatorL">
                <StackPanel  Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="0,5,0,5">
                    <Button x:Name="btnClose" Content="{StaticResource close}" Height="24" Width="24" Margin="5,0,0,0" Padding="4" Background="#2b5797" Click="btnClose_Click"></Button>
                    <ComboBox x:Name="indicatorBox" IsEditable="True" IsReadOnly="True" Text="Select Indicator" Margin="5,0,0,0" Loaded="indicatorBox_Loaded" SelectionChanged="indicatorBox_SelectionChanged"></ComboBox>
                    <ComboBox x:Name="widthBox" FontWeight="SemiBold" FontSize="14" Margin="5,0,0,0" Loaded="widthBox_Loaded" SelectionChanged="widthBox_SelectionChanged"></ComboBox>
                    <ComboBox x:Name="conditionBox" IsEditable="True" IsReadOnly="True"  Text="Select Condition" Margin="5,0,0,0" Loaded="conditionBox_Loaded" SelectionChanged="conditionBox_SelectionChanged"></ComboBox>
                    
                    <xctk:DoubleUpDown x:Name="textValue" FormatString="F2" Margin="5,0,0,0" Width="100" ValueChanged="textValue_ValueChanged">
                        <xctk:DoubleUpDown.Style>
                            <Style TargetType="{x:Type xctk:DoubleUpDown}">
                                <Setter Property="Background" Value="#2b5797"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                                <Setter Property="BorderBrush" Value="#2E3D5A"></Setter>
                                <Style.Resources>
                                    <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.GlyphNormalForegroundKey}" Color="White"></SolidColorBrush>
                                    <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalBackgroundKey}" Color="#2b5797"></SolidColorBrush>
                                    <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ControlNormalBackgroundKey}" Color="#2b5797"></SolidColorBrush>

                                    <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalOuterBorderKey}" Color="Transparent"></SolidColorBrush>
                                </Style.Resources>
                            </Style>
                        </xctk:DoubleUpDown.Style>
                    </xctk:DoubleUpDown>
                    <Button x:Name="AddIndicatorBtn" Content="ADD" Background="Transparent" BorderBrush="#2E3D5A" FontSize="14" FontWeight="SemiBold" Foreground="White" Margin="5,0,0,0" Width="50" Click="AddIndicatorBtn_Click"></Button>
                </StackPanel>
            </Border>

        </DockPanel>
    </Border>

</UserControl>
